version: '3.8'

services:
  postgresql:
    image: postgres:14
    env_file:
      - database.env
      - secrets.env
    restart: always
    shm_size: 256mb
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-U', 'postgres' ]
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - internal_network
    secrets:
      - secrets

  #  pgbouncer:
  #    image: edoburu/pgbouncer:1.12.0
  #    env_file: database.env
  #    depends_on:
  #      - postgresql
  #    healthcheck:
  #      test: ['CMD', 'pg_isready', '-h', 'localhost']
  #    networks:
  #      - internal_network

  redis:
    image: redis:7
    restart: always
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
    volumes:
      - redis:/data
    networks:
      - internal_network
    secrets:
      - secrets

  redis-volatile:
    image: redis:7
    restart: always
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
    networks:
      - internal_network
    secrets:
      - secrets

  elasticsearch:
    image: elasticsearch:7.17.3
    restart: always
    env_file:
      - database.env
      - secrets.env
    environment:
      - cluster.name=elasticsearch-mastodon
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - ingest.geoip.downloader.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [ "CMD-SHELL", "nc -z elasticsearch 9200" ]
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - internal_network
    secrets:
      - secrets

  website:
    image: tootsuite/mastodon:v4.0.2
    env_file:
      - application.env
      - database.env
      - secrets.env
    command: bash -c "bundle exec rails s -p 3000"
    restart: always
    depends_on:
      - postgresql
      #      - pgbouncer
      - redis
      - redis-volatile
      - elasticsearch
    ports:
      - '127.0.0.1:3000:3000'
    networks:
      - internal_network
      - external_network
    healthcheck:
      test: [ 'CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1' ]
    volumes:
      - uploads:/mastodon/public/system
    secrets:
      - secrets

  shell:
    image: tootsuite/mastodon:v4.0.2
    env_file:
      - application.env
      - database.env
      - secrets.env
    command: /bin/bash
    restart: "no"
    networks:
      - internal_network
      - external_network
    volumes:
      - uploads:/mastodon/public/system
    secrets:
      - secrets

  streaming:
    image: tootsuite/mastodon:v4.0.2
    env_file:
      - application.env
      - database.env
      - secrets.env
    command: node ./streaming
    restart: always
    depends_on:
      - postgresql
      #      - pgbouncer
      - redis
      - redis-volatile
      - elasticsearch
    ports:
      - '127.0.0.1:4000:4000'
    networks:
      - internal_network
      - external_network
    healthcheck:
      test: [ 'CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1' ]
    secrets:
      - secrets

  sidekiq:
    image: tootsuite/mastodon:v4.0.2
    env_file:
      - application.env
      - database.env
      - secrets.env
    command: bundle exec sidekiq
    restart: always
    depends_on:
      - postgresql
      #      - pgbouncer
      - redis
      - redis-volatile
      - website
    networks:
      - internal_network
      - external_network
    healthcheck:
      test: [ 'CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false" ]
    volumes:
      - uploads:/mastodon/public/system
    secrets:
      - secrets

  rapidblock:
    image: rapidblock
    env_file:
      - rapidblock.env
      - secrets.env
    depends_on:
      - postgresql
    networks:
      - internal_network
      - external_network
    secrets:
      - secrets

  ofelia:
    image: mcuadros/ofelia:v0.3.6
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - rapidblock
    networks:
      - internal_network
    labels:
      - "ofelia.enabled=true"
      - "ofelia.job-run.rapidblock.schedule=@every 3600s"
      - "ofelia.job-run.rapidblock.container=mastodon_rapidblock_1"

networks:
  external_network:
  internal_network:
    internal: true

volumes:
  postgresql:
    driver_opts:
      type: none
      device: /opt/mastodon/database/postgresql
      o: bind
  redis:
    driver_opts:
      type: none
      device: /opt/mastodon/database/redis
      o: bind
  elasticsearch:
    driver_opts:
      type: none
      device: /opt/mastodon/database/elasticsearch
      o: bind
  uploads:
    driver_opts:
      type: none
      device: /opt/mastodon/public/system
      o: bind
  rapidblock:
    driver_opts:
      type: none
      device: /opt/rapidblock
      o: bind

secrets:
  secrets:
    file: ./secrets.env
