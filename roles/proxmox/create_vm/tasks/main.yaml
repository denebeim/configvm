---

    - name: Clone template
      community.general.proxmox_kvm:
        api_host: "{{api_host}}"
        api_user: "{{api_user}}"
        api_password: "{{api_password}}"
        name: "{{vmname}}"
        newid: "{{ omit if newid is not defined else newid }}"
        format: "qcow2"
        node: "{{ api_host }}"
        clone: "{{clone}}"
        full: true
        timeout: 600
        state: present

    - name: "Reconfigure {{vmname}}"
      community.general.proxmox_kvm:
        update: true
        api_host: "{{api_host}}"
        api_user: "{{api_user}}"
        api_password: "{{api_password}}"
        name: "{{vmname}}"
        vmid: "{{omit if newid is not defined else newid}}"
        node: "{{api_host}}"
        net:
          net0: "{{'virtio=dhcp, bridge=vmbr0' if IP is not defined else omit}}"
        ipconfig:
          ipconfig0: "gw=192.168.42.1,ip={{IP}}/24"
          # ipconfig0: "{{'gw=192.168.42.1,ip=IP/24' if IP is defined else omit}}"
         
        kvm: true
        cpu: "host"
        memory: "{{ omit if memory is not defined else memory }}"
        cores: "{{ omit if cores is not defined else cores }}"
        tags: "{{ omit if mytags is not defined else mytags }}"

        #boot: "order=scsi0"
        hostpci: "{{omit if hostpci is not defined else hostpci}}"
        machine: "{{omit if machine is not defined else machine}}"
        vga: "std"
        ostype: "l26"
        agent: "yes"
        autostart: "{{autostart}}"
      changed_when: false

    - name: Resize Disk
      community.general.proxmox_disk:
        api_host: "{{api_host}}"
        api_user: "{{api_user}}"
        api_password: "{{api_password}}"
        name: "{{vmname}}"
        state: resized
        disk: virtio0
        size: "{{size}}"

    - name: Spin up VM
      community.general.proxmox_kvm:
        api_host: "{{api_host}}"
        api_user: "{{api_user}}"
        api_password: "{{api_password}}"
        name: "{{vmname}}"
        state: started
      register: result

    - name: Create DNS record
      community.general.ipa_dnsrecord:
        record_name: "{{vmname}}"
        record_type: "A"
        record_value: "{{IP}}"
        zone_name: "{{domain}}"
        ipa_user: "admin"
        ipa_pass: "{{ipaadmin_password}}"
      when: IP is defined
      delegate_to: "ipa"

    # - wait_for: host="{{vmname}}" port=22 delay=60  timeout=300
    #   name: Wait for system to be stable
    #   when: result is changed

    - name: Reboot "{{vmname}}"
      command: "qm reboot {{vmname}}"
      async: 45
      poll: 0
      when: result is changed

    # - wait_for: host="{{vmname}}" port=22 delay=60  timeout=300
    #   name: Wait for system to be stable
    #   when: result is changed

    # - name: Refresh inventory
    #   ansible.builtin.meta: refresh_inventory
    #   changed_when: false
